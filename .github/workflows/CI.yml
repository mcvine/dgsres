name: CI

env: {}

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "32 21 * * *"
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    steps:
      - name: install glut
        run: sudo apt-get update && sudo apt-get install -y freeglut3-dev libglu1-mesa

      - name: install latex
        run: sudo apt-get install -y texlive-latex-extra

      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: unzip test data
        shell: pwsh
        run: |
          unzip tests/data/PbTe-CNCS-HH4-Ei_12-E_5-q_0/dhkls.npy.zip -d tests/data/PbTe-CNCS-HH4-Ei_12-E_5-q_0
          ls -tl tests/data/beam/ARCS/100meV/out/neutrons

      - name: ~/.mantid
        run: git clone https://github.com/yxqd/dotmantid ~/.mantid

      # setup conda
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          activate-environment: test
          python-version: ${{ matrix.python-version }}
          channels: mantid,mcvine,conda-forge

      # install deps
      - name: install deps
        shell: pwsh
        run: |
          conda install mcvine mantid=6 pytest click=7 tqdm pylatex lmfit cloudpickle scikit-image=0.19
          mcvine
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: checking
        shell: pwsh
        run: |
          pwd
          find
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: install/build/test
        shell: pwsh
        run: |
          ./builders/github-actions/build_and_test.sh
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
